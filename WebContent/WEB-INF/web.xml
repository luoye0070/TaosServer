<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>TaosServer</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <servlet-mapping>  
            <servlet-name>default</servlet-name>  
            <url-pattern>*.css</url-pattern>  
    </servlet-mapping>  
      
    <servlet-mapping>  
            <servlet-name>default</servlet-name>  
            <url-pattern>*.gif</url-pattern>  
    </servlet-mapping>  
      
    <servlet-mapping>  
            <servlet-name>default</servlet-name>  
            <url-pattern>*.jpg</url-pattern>  
    </servlet-mapping>  
      
    <servlet-mapping>  
            <servlet-name>default</servlet-name>  
            <url-pattern>*.js</url-pattern>  
    </servlet-mapping>  
    
    <servlet-mapping> 
            <servlet-name>default</servlet-name> 
            <url-pattern>*.html</url-pattern> 
    </servlet-mapping>


	<!-- <filter> <filter-name>myCharacterEncoding</filter-name> <filter-class>com.lj.taosserver.filter.MyCharacterEncodingFilter</filter-class> 
		</filter> <filter-mapping> <filter-name>myCharacterEncoding</filter-name> 
		<url-pattern>*</url-pattern> </filter-mapping> -->
 
 
<filter>  
  <filter-name>SetCharacterEncoding</filter-name>  
  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
  <init-param>  
  <param-name>encoding</param-name>  
  <param-value>UTF-8</param-value>  
  </init-param> 
  <init-param> 
	<param-name>forceEncoding</param-name> 
	<param-value>true</param-value> 
</init-param>  
</filter>  
 <filter-mapping>  
  <filter-name>SetCharacterEncoding</filter-name>  
  <url-pattern>*</url-pattern>  
 </filter-mapping>     
  
  
  <!-- SpringSecurity必须的filter -->  
    <filter>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
    </filter>  
  
    <filter-mapping>  
        <filter-name>springSecurityFilterChain</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
 
<!-- 修正SpringSecurity不允许框架的问题 --> 
<filter> 
	<filter-name>X-Frame-Options-Filter</filter-name> 
	<filter-class>com.lj.taosserver.filter.MyXFrameOptionsFilter</filter-class> 
</filter> 
<filter-mapping> 
	<filter-name>X-Frame-Options-Filter</filter-name> 
	<url-pattern>*</url-pattern> 
</filter-mapping>
  
  <!-- Spring MVC配置 -->
<!-- ====================================== -->
<servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml
    <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/spring-servlet.xml</param-value>  默认
    </init-param>
    -->
    <load-on-startup>1</load-on-startup>
</servlet>
 
<servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/</url-pattern>
</servlet-mapping>
   

 
 
<!-- Spring配置 -->
<!-- ====================================== -->
<listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>
   
 
<!-- 指定Spring Bean的配置文件所在目录。默认配置在WEB-INF目录下 -->
<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	classpath:springconfig/applicationContext.xml
    	classpath:springconfig/spring-security.xml
    </param-value>
</context-param>

</web-app>