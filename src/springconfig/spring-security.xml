<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:security="http://www.springframework.org/schema/security"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
            http://www.springframework.org/schema/security   
            http://www.springframework.org/schema/security/spring-security-4.0.xsd">

 <!--  Spring-Security 的配置 -->  
    <!-- 注意开启use-expressions.表示开启表达式.  
    see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html  
     -->  
     
    <security:http pattern="*.jpg" security="none" />
	<security:http pattern="*.png" security="none" />
	<security:http pattern="*.gif" security="none" />
	<security:http pattern="*.css" security="none" />
	<security:http pattern="*.js" security="none" />    
	 
    <security:http auto-config="true" use-expressions="true">  
        <security:access-denied-handler error-page="/auth/login"/>
          
        <security:intercept-url pattern="/auth/login" access="permitAll"/>  
        
        <security:intercept-url pattern="/manage/*" access="hasAnyRole('ROLE_MANAGE','ROLE_ADMIN')"/> 
        <security:intercept-url pattern="/dailyreport-manage/*" access="hasAnyRole('ROLE_MANAGE','ROLE_ADMIN')"/>
        <security:intercept-url pattern="/restaurant-manage/*" access="hasAnyRole('ROLE_MANAGE','ROLE_ADMIN')"/> 
          
       <security:form-login  
                login-page="/auth/login"   
                authentication-failure-url="/auth/login?error=true"   
                default-target-url="/manage/index"/>  
              
        <!-- <security:logout   
                invalidate-session="true"   
                logout-success-url="/auth/login"   
                /> -->
      
    </security:http>
    
    
      
    <!-- 指定一个自定义的authentication-manager :customUserDetailsService -->  
    <security:authentication-manager>  
            <security:authentication-provider user-service-ref="customUserDetailsService">  
                    <security:password-encoder ref="passwordEncoder">
                    	<!-- <security:salt-source system-wide="111111"/> -->
                    	<security:salt-source user-property="username"/>
                    </security:password-encoder>  
            </security:authentication-provider>  
    </security:authentication-manager>
      
    <!-- 对密码进行MD5编码 -->  
    <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>  
  
    <!--   
        通过 customUserDetailsService,Spring会自动的用户的访问级别.  
        也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.  
     -->  
    <bean id="customUserDetailsService" class="com.lj.taosserver.service.impl.CustomUserDetailsService">
    	<property name="simpleSearchDao" ref="simpleSearchDao"></property>
    </bean>  
            
</beans> 